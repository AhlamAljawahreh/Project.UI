@page "/meals"
@using Project.DataModels;
@using Project.UI.Services;
@inject IProductServices _productService;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@inject ProtectedLocalStorage BrowserStorage

@code {
    public string token { set; get; }
    public string role { set; get; }

    private IEnumerable<Product> Data = null;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Data = await _productService.GetProducts();
        await Read();
    }
    public async Task Read()
    {
        var result = await BrowserStorage.GetAsync<string>("token");
        this.token = result.Success ? result.Value : "";
        var roleResult = await BrowserStorage.GetAsync<string>("Role");
        this.role = roleResult.Success ? roleResult.Value : "";

    }
}

<h3>GridView</h3>
<h6>@this.token</h6>
<h6>@this.role</h6>

   
@if (Data == null)
            {


    <h4>loading ... </h4> }
            else
            {
    @if (Data.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Meal</th>
                    <th>image</th>
                    <th>Description</th>
                    <th>Price</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Data)
                {
                    <tr>
                        <td>@item.ProductId</td>
                        <td>@item.name</td>
                        <td>@item.Image</td>
                        <td>@item.Description</td>
                        <td>@item.Price</td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

