@page "/orders"
@using Project.DataModels;
@using Project.UI.Services;
@using Project.UI.Interfaces;
@inject IOrderServices _orderServices
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@inject ProtectedLocalStorage BrowserStorage;
@inject NavigationManager NavigationManager;


@code {
    public string token { set; get; }
    public string role { set; get; }
    public bool isLoggedIn { set; get; }


    private IEnumerable<Order> Data = null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Data = await _orderServices.GetOrders();
            await Read();

            StateHasChanged();
        }
    }
    public async Task Read()
    {
        var result = await BrowserStorage.GetAsync<string>("token");
        this.token = result.Success ? result.Value : "";
        var roleResult = await BrowserStorage.GetAsync<string>("Role");
        this.role = roleResult.Success ? roleResult.Value : "";



    }
    public async void Logout()
    {

        await BrowserStorage.DeleteAsync("UserId");
        await BrowserStorage.DeleteAsync("UserName");
        await BrowserStorage.DeleteAsync("Role");
        await BrowserStorage.DeleteAsync("token");

        NavigationManager.NavigateTo("/");

    }
    public async void Delete(int id)
    {

        var httpResponse = await _orderServices.DeleteOrder(id);

        if (httpResponse.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/orders");
        }


    }
    public void goTo()
    {

        NavigationManager.NavigateTo("new_meals");

    }
    public void Edit()
    {

        NavigationManager.NavigateTo("/");

    }
}

<div class="main">
    <div class="top-row px-4 d-inline font-weight-bolder  ">

        <NavLink class="nav-link float-right  " @onclick="Logout">
            <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
        </NavLink>
        @if (this.role == "Admin")
        {
            <NavLink class="nav-link float-right" href="new_meals">
                Orders
            </NavLink>
            <NavLink class="nav-link float-right" href="new_meals">
                New Meal
            </NavLink>
        }


    </div>

    @if (this.role != "Admin")
    {
        <h4>You cant Add Meal .. (Unauthorized) </h4>
    }
    else
    {
        <h3>Orders</h3>



        @if (Data == null)
        {


            <h4>loading ... </h4> }
        else
        {
            @if (Data.Any())
            {




                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Order Id</th>
                            <th>Details</th>
                            <th>Delete</th>


                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in Data)
                        {

                            <tr @key="item.OrderId">
                                <td> @item.OrderId</td>

                                <td><a class="btn btn-info" href="single_order/@item.OrderId">Details</a></td>
                                <td><button class="btn btn-danger" @onclick="() => { Delete(item.OrderId); }">Delete</button></td>

                            </tr>


                        }
                    </tbody>
                </table>

            }
            else
            {
                <p>loading ...</p>
            }
        }
    }
    </div>
