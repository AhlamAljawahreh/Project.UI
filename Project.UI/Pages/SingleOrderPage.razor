@page "/single_order/{id}"
@using Project.DataModels;
@using Project.UI.Services;
@using Project.UI.Interfaces;
@inject IOrderServices _orderServices
@inject IProductServices _productService;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@inject ProtectedLocalStorage BrowserStorage;
@inject NavigationManager NavigationManager;


@code {
    [Parameter]
    public string id { set; get; }
    public string token { set; get; }
    public string role { set; get; }
    public bool isLoggedIn { set; get; }
    public int bill { set; get; } = 0;


    private IEnumerable<Product> Data = null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Data = await _productService.GetOrderProducts(Int16.Parse(this.id));
             getMyBill();
            await Read();

            StateHasChanged();
        }
    }
    public async Task Read()
    {
        var result = await BrowserStorage.GetAsync<string>("token");
        this.token = result.Success ? result.Value : "";
        var roleResult = await BrowserStorage.GetAsync<string>("Role");
        this.role = roleResult.Success ? roleResult.Value : "";
    }
    public void getMyBill()
    {
        this.bill = 0;
        foreach (var item in Data)
        {
            this.bill += item.Price;
        }
    }
    public async void Logout()
    {

        await BrowserStorage.DeleteAsync("UserId");
        await BrowserStorage.DeleteAsync("UserName");
        await BrowserStorage.DeleteAsync("Role");
        await BrowserStorage.DeleteAsync("token");

        NavigationManager.NavigateTo("/");

    }
    public void goTo()
    {

        NavigationManager.NavigateTo("new_meals");

    }
    public void Edit()
    {

        NavigationManager.NavigateTo("/");

    }
}

<div class="main">
    <div class="top-row px-4 d-inline font-weight-bolder  ">

        <NavLink class="nav-link float-right  " @onclick="Logout">
            <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
        </NavLink>
        @if (this.role == "Admin")
        {
            <NavLink class="nav-link float-right" href="new_meals">
                Orders
            </NavLink>
            <NavLink class="nav-link float-right" href="new_meals">
                New Meal
            </NavLink>
        }


    </div>
    <h3>Order @this.id</h3>
    <h3 class="float-right nav-link">Bill: @bill JD</h3>
    <div class="row">

        @if (Data == null)
        {


            <h4>loading ... </h4> }
        else
        {
            @if (Data.Any())
            {
                @foreach (var item in Data)
                {
                    <div class=" col-sm-3 col-md-3 col-2 bg-light " style="width: 18rem;">
                        <div class="card " style="width: 25rem;">
                            <img class="card-img-top" src=@item.Image alt="meal image">
                            <div class="card-body">
                                <h5 class="card-title font-weight-bolder">@item.name </h5>
                                <small>@item.Price</small>
                                <p class="card-text">@item.Description</p>
                            </div>
                        </div>
                    </div>
                }
            }
        }
        </div>
</div>
