@page "/"
@using Project.DataModels;
@using Project.UI.Services;
@inject ILoginService _loginService;
@inject LoginService login;
@inject NavigationManager NavigationManager;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@inject ProtectedLocalStorage BrowserStorage



@code {


    private UserCred user { set; get; } = new UserCred();

    public bool isLoggedIn { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        // Data = await _loginService.Authenticate(UserCred user);
    }

    public async void onSubmit()
    {
        Console.WriteLine("done");
        Console.WriteLine(user.Username);
        Console.WriteLine(user.Password);
        var httpResponse = await _loginService.Authenticate(user);


        await BrowserStorage.SetAsync("UserId", httpResponse.UserId);
        await BrowserStorage.SetAsync("UserName", httpResponse.Username);
        await BrowserStorage.SetAsync("Role", httpResponse.Role);
        await BrowserStorage.SetAsync("token", httpResponse.Token);




        Console.WriteLine($"Done? {httpResponse.Token}  ");
        if (httpResponse.Role == "Admin")
        {
            isLoggedIn = true;

            NavigationManager.NavigateTo("/meals");
        }
        //Console.WriteLine("Wait");
    }



}



<div class="card">
    <h3>Login</h3>
    <div class="card-body">
        <EditForm Model=@user OnSubmit="@onSubmit">
            <div class="form-group">
                <label>UserName</label>
                <InputText id="username" class="form-control" name="userName" @bind-Value="user.Username"></InputText>
            </div>
            <div class="form-group">
                <label>Password </label>
                <InputText id="Password" type="password" class="form-control" name="Password" @bind-Value="user.Password"></InputText>
            </div>
            <button type="submit" class="btn btn-info">Login</button>
        </EditForm>
    </div>
</div>