@page "/edit_meals/{id}"
@using Project.DataModels;
@using Project.UI.Services;
@inject IProductServices _productService;
@inject IPhotoService _photoService;
@using Microsoft.AspNetCore.Http;
@inject NavigationManager NavigationManager;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@inject ProtectedLocalStorage BrowserStorage




@code {
    [Parameter]
    public string id { set; get; }
    public string token { set; get; }
    public string role { set; get; }
    private Product product { set; get; } = new Product();
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            this.product = await _productService.GetMeal(Int16.Parse(id));
            await Read();

            StateHasChanged();
        }
    }
    public async void Logout()
    {

        await BrowserStorage.DeleteAsync("UserId");
        await BrowserStorage.DeleteAsync("UserName");
        await BrowserStorage.DeleteAsync("Role");
        await BrowserStorage.DeleteAsync("token");

        NavigationManager.NavigateTo("/");

    }
    public async Task Read()
    {
        var result = await BrowserStorage.GetAsync<string>("token");
        this.token = result.Success ? result.Value : "";
        var roleResult = await BrowserStorage.GetAsync<string>("Role");
        this.role = roleResult.Success ? roleResult.Value : "";

    }
    public async void onEdit()
    {
        var httpResponse = await _productService.EditMeal(product, Int16.Parse(id));

            NavigationManager.NavigateTo("/meals");
        
    }
    private async void upload(InputFileChangeEventArgs e)
    {

        var httpResponse = await _photoService.AddItemPhotoAsync(e.File);
        product.Image = httpResponse.SecureUrl.ToString();
    }
    public async void delete()
    {
        var httpResponse = await _productService.DeleteMeal(Int16.Parse(id));
        if (httpResponse.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/meals");
        }
    }


}
<div class="top-row px-4 d-inline font-weight-bolder  ">

    <NavLink class="nav-link float-right  " @onclick="Logout">
        <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
    </NavLink>
    @if (this.role == "Admin")
    {
        <NavLink class="nav-link float-right" href="new_meals">
            Orders
        </NavLink>
        <NavLink class="nav-link float-right" href="new_meals">
            New Meal
        </NavLink>
    }


</div>

@if (this.role != "Admin")
{
    <h4>You cant Add Meal .. (Unauthorized) </h4>
}
else
{
    <div class="align-content-center justify-content-center align-items-center">

        <div class="position-absolute  top-50 start-50 translate-middle border align-content-center justify-content-center align-items-center p-5 bg-light">
            <h3 class="pb-4">Add Meal</h3>
            <EditForm Model=@product OnSubmit="@onEdit">
                <div class="form-group mb-3">
                    <label>UserName</label>
                    <InputText id="username" class="form-control" name="userName" @bind-Value="product.name"></InputText>
                </div>
                <div class="form-group mb-3">
                    <label>Description </label>
                    <InputText id="Description" class="form-control" name="Description" @bind-Value="product.Description"></InputText>
                </div>
                <div class="form-group mb-3">
                    <label>Price </label>
                    <InputNumber id="Price" type="number" class="form-control" name="Price" @bind-Value="product.Price"></InputNumber>
                </div>
                <div class="form-group mb-3">
                    <label>Images </label>
                    <InputFile OnChange="upload" id="Password" class="form-control" name="Password"></InputFile>

                </div>
                <button type="submit" class="btn btn-info mb-3">Edit </button>
                <p></p>
                <small>*wait a few second after choose the image file before create new meal </small>
            </EditForm>
            <button type="submit" class="btn btn-info mb-3" @onclick=" () => { delete(); }">Delete </button>
        </div>



    </div>

}

